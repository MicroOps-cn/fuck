// Code generated by protoc-gen-gogo. DO NOT EDIT.
// source: types/tls.proto

package tls

import (
	fmt "fmt"
	proto "github.com/gogo/protobuf/proto"
	math "math"
)

// Reference imports to suppress errors if they are not otherwise used.
var _ = proto.Marshal
var _ = fmt.Errorf
var _ = math.Inf

// This is a compile-time assertion to ensure that this generated file
// is compatible with the proto package it is being compiled against.
// A compilation error at this line likely means your copy of the
// proto package needs to be updated.
const _ = proto.GoGoProtoPackageIsVersion3 // please upgrade the proto package

type TLSOptions struct {
	CAFile               string   `protobuf:"bytes,1,opt,name=ca_file,json=caFile,proto3" json:"ca_file,omitempty"`
	CertFile             string   `protobuf:"bytes,2,opt,name=cert_file,json=certFile,proto3" json:"cert_file,omitempty"`
	KeyFile              string   `protobuf:"bytes,3,opt,name=key_file,json=keyFile,proto3" json:"key_file,omitempty"`
	ServerName           string   `protobuf:"bytes,4,opt,name=server_name,json=serverName,proto3" json:"server_name,omitempty"`
	InsecureSkipVerify   bool     `protobuf:"varint,5,opt,name=insecure_skip_verify,json=insecureSkipVerify,proto3" json:"insecure_skip_verify,omitempty"`
	MinVersion           string   `protobuf:"bytes,6,opt,name=min_version,json=minVersion,proto3" json:"min_version,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *TLSOptions) Reset()         { *m = TLSOptions{} }
func (m *TLSOptions) String() string { return proto.CompactTextString(m) }
func (*TLSOptions) ProtoMessage()    {}
func (*TLSOptions) Descriptor() ([]byte, []int) {
	return fileDescriptor_9c06a1c6ca94056c, []int{0}
}
func (m *TLSOptions) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_TLSOptions.Unmarshal(m, b)
}
func (m *TLSOptions) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_TLSOptions.Marshal(b, m, deterministic)
}
func (m *TLSOptions) XXX_Merge(src proto.Message) {
	xxx_messageInfo_TLSOptions.Merge(m, src)
}
func (m *TLSOptions) XXX_Size() int {
	return xxx_messageInfo_TLSOptions.Size(m)
}
func (m *TLSOptions) XXX_DiscardUnknown() {
	xxx_messageInfo_TLSOptions.DiscardUnknown(m)
}

var xxx_messageInfo_TLSOptions proto.InternalMessageInfo

func (m *TLSOptions) GetCAFile() string {
	if m != nil {
		return m.CAFile
	}
	return ""
}

func (m *TLSOptions) GetCertFile() string {
	if m != nil {
		return m.CertFile
	}
	return ""
}

func (m *TLSOptions) GetKeyFile() string {
	if m != nil {
		return m.KeyFile
	}
	return ""
}

func (m *TLSOptions) GetServerName() string {
	if m != nil {
		return m.ServerName
	}
	return ""
}

func (m *TLSOptions) GetInsecureSkipVerify() bool {
	if m != nil {
		return m.InsecureSkipVerify
	}
	return false
}

func (m *TLSOptions) GetMinVersion() string {
	if m != nil {
		return m.MinVersion
	}
	return ""
}

func init() {
	proto.RegisterType((*TLSOptions)(nil), "fuck.clients.tls.TLSOptions")
}

func init() { proto.RegisterFile("types/tls.proto", fileDescriptor_9c06a1c6ca94056c) }

var fileDescriptor_9c06a1c6ca94056c = []byte{
	// 285 bytes of a gzipped FileDescriptorProto
	0x1f, 0x8b, 0x08, 0x00, 0x00, 0x00, 0x00, 0x00, 0x02, 0xff, 0x34, 0xd0, 0xb1, 0x4e, 0xf3, 0x30,
	0x14, 0x05, 0xe0, 0x3f, 0x3f, 0x90, 0xb6, 0x66, 0x00, 0x45, 0x1d, 0x02, 0x0c, 0xad, 0x60, 0xe9,
	0x42, 0x8c, 0xc4, 0x80, 0x10, 0x13, 0x45, 0x62, 0x02, 0x8a, 0x5a, 0xd4, 0x81, 0x25, 0x4a, 0xcd,
	0x6d, 0xb8, 0x8a, 0x63, 0x5b, 0xbe, 0x4e, 0xa5, 0x3c, 0x2c, 0x0c, 0x3c, 0x09, 0xb2, 0x2d, 0x26,
	0x5b, 0xe7, 0x3b, 0xba, 0xc3, 0x61, 0x47, 0xae, 0x37, 0x40, 0xdc, 0x49, 0x2a, 0x8c, 0xd5, 0x4e,
	0x67, 0xc7, 0xdb, 0x4e, 0x34, 0x85, 0x90, 0x08, 0xca, 0x51, 0xe1, 0x24, 0x9d, 0x8e, 0x6b, 0x5d,
	0xeb, 0x80, 0xdc, 0xff, 0x62, 0xef, 0xfc, 0x2b, 0x61, 0xec, 0xed, 0x69, 0xb5, 0x30, 0x0e, 0xb5,
	0xa2, 0xec, 0x82, 0x0d, 0x44, 0x55, 0x6e, 0x51, 0x42, 0x9e, 0x4c, 0x93, 0xd9, 0x68, 0xce, 0x7e,
	0xbe, 0x27, 0xe9, 0xc3, 0xfd, 0x23, 0x4a, 0x58, 0xa6, 0xa2, 0xf2, 0x6f, 0x76, 0xc6, 0x46, 0x02,
	0xac, 0x8b, 0xb5, 0xff, 0xbe, 0xb6, 0x1c, 0xfa, 0x20, 0xe0, 0x09, 0x1b, 0x36, 0xd0, 0x47, 0xdb,
	0x0b, 0x36, 0x68, 0xa0, 0x0f, 0x34, 0x61, 0x87, 0x04, 0x76, 0x07, 0xb6, 0x54, 0x55, 0x0b, 0xf9,
	0x7e, 0x50, 0x16, 0xa3, 0x97, 0xaa, 0x85, 0xec, 0x8a, 0x8d, 0x51, 0x11, 0x88, 0xce, 0x42, 0x49,
	0x0d, 0x9a, 0x72, 0x07, 0x16, 0xb7, 0x7d, 0x7e, 0x30, 0x4d, 0x66, 0xc3, 0x65, 0xf6, 0x67, 0xab,
	0x06, 0xcd, 0x3a, 0x88, 0x3f, 0xd9, 0xa2, 0xf2, 0x3d, 0x42, 0xad, 0xf2, 0x34, 0x9e, 0x6c, 0x51,
	0xad, 0x63, 0x32, 0xbf, 0x7d, 0xbf, 0xa9, 0xd1, 0x7d, 0x76, 0x9b, 0x42, 0xe8, 0x96, 0x3f, 0xa3,
	0xb0, 0x7a, 0x61, 0xe8, 0x52, 0x28, 0x8e, 0x1f, 0x15, 0x71, 0xd3, 0xd4, 0x3c, 0x8e, 0xc4, 0x51,
	0x39, 0xb0, 0xaa, 0x92, 0x7e, 0xc4, 0x3b, 0x27, 0xe9, 0xf5, 0xdf, 0x26, 0x0d, 0x1b, 0x5d, 0xff,
	0x06, 0x00, 0x00, 0xff, 0xff, 0xc1, 0xcc, 0x4a, 0x83, 0x5e, 0x01, 0x00, 0x00,
}
